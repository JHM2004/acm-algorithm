出题人：

描述

在每年的校赛里，所有进入决赛的同学都会获得一件很漂亮的t-shirt。但是每当我们的工作人员把上百件的衣服从商店运回到赛场的时候，却是非常累的！所以现在他们想要寻找最短的从商店到赛场的路线，你可以帮助他们吗？


输入描述

输入包括多组数据。每组数据第一行是两个整数N、M（N<=100，M<=10000），N表示成都的大街上有几个路口，标号为1的路口是商店所在地，标号为N的路口是赛场所在地，M则表示在成都有几条路。N=M=0表示输入结束。接下来M行，每行包括3个整数A，B，C（1<=A,B<=N,1<=C<=1000）,表示在路口A与路口B之间有一条路，我们的工作人员需要C分钟的时间走过这条路。
输入保证至少存在1条商店到赛场的路线。

输出描述

对于每组输入，输出一行，表示工作人员从商店走到赛场的最短时间

用例输入 1 

2 1
1 2 3
3 3
1 2 5
2 3 5
3 1 2
0 0
用例输出 1 

3
2


来源HDU 2544


#include<iostream>
using namespace std;
int n,m;
int vis[10010],dis[10010],map1[10010][10010];
//dijkstra算法（解决此题的最优方法）
void dijkstra(int x)
{
    int i,j,min1,t;
    for(i=1;i<=n;i++)
    {
        dis[i]=map1[1][i];
        vis[i]=0;
    }
    vis[x]=1;
    for(i=1;i<=n;i++)
    {
        min1=0x3f3f3f3f;
        for(j=1;j<=n;j++)
        {
            if(vis[j]==0&&dis[j]<min1)
            {
                t=j;
                min1=dis[j];
            }
        }
        vis[t]=1;
        for(j=1;j<=n;j++)//松弛
        {
            if(vis[j]==0&&dis[t]+map1[t][j]<dis[j])
                dis[j]=dis[t]+map1[t][j];
        }
    }
}
int main()
{
    int i,j;
    while(scanf("%d %d",&n,&m))
    {
        if(n==0&&m==0)
            break;
        for(i=1;i<=n;++i)
            for(j=1;j<=n;j++)
                map1[i][j]=0x3f3f3f3f;
        while(m--)
        {
            int a,b,c;
            cin>>a>>b>>c;
            if(c<map1[a][b]||c<map1[b][a])
                map1[a][b]=map1[b][a]=c;
        }
        dijkstra(1);
        cout<<dis[n]<<endl;
    }
}
