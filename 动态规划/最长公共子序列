描述

给定两个长度分别为 n和 m 的字符串 A和 B，求既是 A的子序列又是 B的子序列的字符串长度最长是多少。

输入描述

第一行包含两个整数 n和 m。
第二行包含一个长度为 n的字符串，表示字符串 A。
第三行包含一个长度为m的字符串，表示字符串 B。
字符串均由小写字母构成。
1≤n,m≤1000

输出描述

输出一个整数，表示最大长度。

用例输入 1 

4 5
acbd
abedc
用例输出 1 

3



#include<bits/stdc++.h>
//最长公共子序列的动态规划做法
using namespace std;
const int N=1e3+10;
char a[N],b[N];
int n,m;
int dp[N][N];
int main()
{
    cin>>n>>m;
    for(int i=1;i<=n;i++)cin>>a[i];
    for(int i=1;i<=m;i++)cin>>b[i];
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
			dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            if(a[i]==b[j])
                dp[i][j]=max(dp[i][j],1+dp[i-1][j-1]);
        }
    }
    cout<<dp[n][m]<<endl;
    return 0;
}