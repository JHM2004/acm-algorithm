描述

You are given a string s[1…n] consisting of lowercase Latin letters. It is guaranteed that n=2 
k
  for some integer k≥0.

The string s[1…n] is called c-good if at least one of the following three conditions is satisfied:

The length of s is 1, and it consists of the character c (i.e. s 
1
​
 =c);
The length of s is greater than 1, the first half of the string consists of only the character c (i.e. s 
1
​
 =s 
2
​
 =⋯=s 
2
n
​
 
​
 =c) and the second half of the string (i.e. the string s 
2
n
​
 +1
​
 s 
2
n
​
 +2
​
 …s 
n
​
 ) is a (c+1)-good string;
The length of s is greater than 1, the second half of the string consists of only the character c (i.e. s 
2
n
​
 +1
​
 =s 
2
n
​
 +2
​
 =⋯=s 
n
​
 =c) and the first half of the string (i.e. the string s 
1
​
 s 
2
​
 …s 
2
n
​
 
​
 ) is a (c+1)-good string.
For example: "aabc" is 'a'-good, "ffgheeee" is 'e'-good.

In one move, you can choose one index i from 1 to n and replace s 
i
​
  with any lowercase Latin letter (any character from 'a' to 'z').

Your task is to find the minimum number of moves required to obtain an 'a'-good string from s (i.e. c-good string for c= 'a'). It is guaranteed that the answer always exists.

You have to answer t independent test cases.

Another example of an 'a'-good string is as follows. Consider the string s="cdbbaaaa". It is an 'a'-good string, because:

the second half of the string ("aaaa") consists of only the character 'a';
the first half of the string ("cdbb") is 'b'-good string, because:
the second half of the string ("bb") consists of only the character 'b';
the first half of the string ("cd") is 'c'-good string, because:
the first half of the string ("c") consists of only the character 'c';
the second half of the string ("d") is 'd'-good string.
输入描述

The first line of the input contains one integer t (1≤t≤2⋅10 
4
 ) — the number of test cases. Then t test cases follow.

The first line of the test case contains one integer n (1≤n≤131 072) — the length of s. It is guaranteed that n=2 
k
  for some integer k≥0. The second line of the test case contains the string s consisting of n lowercase Latin letters.

It is guaranteed that the sum of n does not exceed 2⋅10 
5
  (∑n≤2⋅10 
5
 ).

输出描述

For each test case, print the answer — the minimum number of moves required to obtain an 'a'-good string from s (i.e. c-good string with c= 'a'). It is guaranteed that the answer exists.

用例输入 1 

6
8
bbdcaaaa
8
asdfghjk
8
ceaaaabb
8
bbaaddcc
1
z
2
ac
用例输出 1 

0
7
4
5
1
1



#include<bits/stdc++.h>
using namespace std;
int dfs(string&s,char ch)
{
    if(s.length()==1)
    {
        if(s[0]==ch)return 0;
        else return 1;
    }
    if(ch>'z')return 0;
    int n=s.length();
    
    string ls=s.substr(0,n/2);
    string rs=s.substr(n/2);
    int ln=0;int rn=0;
    for(char&it:ls)
    {
        if(it==ch)ln++;
    }
    for(char&it:rs)
    {
        if(it==ch)rn++;
    }
	int ans1=0;
    int ans2=0;
    
    //此次用左
    ans1+=(n/2-ln);
    ans1+=dfs(rs,ch+1);
    
    ans2+=(n/2-rn);
    ans2+=dfs(ls,ch+1);
    
    return min(ans1,ans2);
}
int main()
{
    int t;cin>>t;
    while(t--)
    {
        int n;cin>>n;
        string s;cin>>s;
        //长为n,前一半s.substr(0,n/2);后一半s.substr(n/2);
        char ch='a';
        int ans=dfs(s,ch);
        cout<<ans<<endl;
    }
    return 0;
}
