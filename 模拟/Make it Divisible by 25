出题人：

描述

It is given a positive integer n. In 1 move, one can select any single digit and remove it (i.e. one selects some position in the number and removes the digit located at this position). The operation cannot be performed if only one digit remains. If the resulting number contains leading zeroes, they are automatically removed.

E.g. if one removes from the number 32925 the 3-rd digit, the resulting number will be 3225. If one removes from the number 20099050 the first digit, the resulting number will be 99050 (the 2 zeroes going next to the first digit are automatically removed).

What is the minimum number of steps to get a number such that it is divisible by 25 and positive? It is guaranteed that, for each n occurring in the input, the answer exists. It is guaranteed that the number n has no leading zeros.

输入描述

The first line contains one integer t (1≤t≤10 
4
 ) — the number of test cases. Then t test cases follow.

Each test case consists of one line containing one integer n (25≤n≤10 
18
 ). It is guaranteed that, for each n occurring in the input, the answer exists. It is guaranteed that the number n has no leading zeros.

输出描述

For each test case output on a separate line an integer k (k≥0) — the minimum number of steps to get a number such that it is divisible by 25 and positive.

用例输入 1 

5
100
71345
3259
50555
2050047
用例输出 1 

0
3
1
3
2
提示

In the first test case, it is already given a number divisible by 25.

In the second test case, we can remove the digits 1, 3, and 4 to get the number 75.

In the third test case, it's enough to remove the last digit to get the number 325.

In the fourth test case, we can remove the three last digits to get the number 50.

In the fifth test case, it's enough to remove the digits 4 and 7.



#include<bits/stdc++.h>
#define int long long
using namespace std;
signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    int t;cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        vector<int>arr1(4,0);
        vector<int>arr2(2,0);
        reverse(s.begin(),s.end());
        int ans=0;
        for(char&ch:s)
        {
            ans++;
            if(ch=='0')
            {
                if(arr2[0]==0)arr2[0]++;
                else break;
            }
            else if(ch=='2')
            {
                if(arr2[1])break;
            }
            else if(ch=='5') 
            {
                if(arr2[0])break;
                arr2[1]++;
            }
            else if(ch=='7')
            {
                if(arr2[1])break;
            }
        }
        cout<<ans-2<<endl;
    }
    return 0;
}