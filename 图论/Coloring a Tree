描述

You are given a rooted tree with n vertices. The vertices are numbered from 1 to n, the root is the vertex number 1.

Each vertex has a color, let's denote the color of vertex v by cv. Initially cv = 0.

You have to color the tree into the given colors using the smallest possible number of steps. On each step you can choose a vertex v and a color x, and then color all vectices in the subtree of v (including v itself) in color x. In other words, for every vertex u, such that the path from root to u passes through v, set cu = x.

It is guaranteed that you have to color each vertex in a color different from 0.

You can learn what a rooted tree is using the link: .

输入描述

The first line contains a single integer n (2 ≤ n ≤ 104) — the number of vertices in the tree.

The second line contains n - 1 integers p2, p3, ..., pn (1 ≤ pi < i), where pi means that there is an edge between vertices i and pi.

The third line contains n integers c1, c2, ..., cn (1 ≤ ci ≤ n), where ci is the color you should color the i-th vertex into.

It is guaranteed that the given graph is a tree.

输出描述

Print a single integer — the minimum number of steps you have to perform to color the tree into given colors.

用例输入 1 

6
1 2 2 1 5
2 1 1 1 1 1
用例输出 1 

3
用例输入 2 

7
1 1 2 3 1 4
3 3 1 1 1 2 3
用例输出 2 

5
提示

The tree from the first sample is shown on the picture (numbers are vetices' indices):



On first step we color all vertices in the subtree of vertex 1 into color 2 (numbers are colors):



On seond step we color all vertices in the subtree of vertex 5 into color 1:



On third step we color all vertices in the subtree of vertex 2 into color 1:



The tree from the second sample is shown on the picture (numbers are vetices' indices):



On first step we color all vertices in the subtree of vertex 1 into color 3 (numbers are colors):



On second step we color all vertices in the subtree of vertex 3 into color 1:



On third step we color all vertices in the subtree of vertex 6 into color 2:



On fourth step we color all vertices in the subtree of vertex 4 into color 1:



On fith step we color all vertices in the subtree of vertex 7 into color 3:



来源

Problem：cf-902b

Contest：cf round 453（div.2）



#include<bits/stdc++.h>
using namespace std;
vector<int> g[10010];
int ans, p[10010], c[10010], n;
//x是此时处理的节点编号，from是父节点，cc是父节点的染色情况
void dfs(int x, int cc, int from) { //递归染树
	if(c[x] != cc) ans ++;			//如果根节点与目标颜色不同，必定要染
    //c[x]最终此点的染色情况
    
	int len = g[x].size();//建的图
	for(int i = 0; i < len; ++i) { //遍历每棵子树
		int v = g[x][i];
		if(v == from) continue;//不能遍历回去，只能从父到子
		//from是父节点，cc是父节点的染色情况
		dfs(v, c[x], x);       //递归求解
	}
}

int main() {
	cin >> n;
	for(int i = 1; i < n; ++i) {
		cin >> p[i];//记录边的情况，之后用二维数组存图，p数组就没有用了
		g[i + 1].push_back(p[i]);  //用vector存树
		g[p[i]].push_back(i + 1);
	}
	for(int i = 1; i <= n; ++i) cin >> c[i];//最终染色情况
	dfs(1, -1, -1);
	cout << ans << endl;
	return 0;
}
