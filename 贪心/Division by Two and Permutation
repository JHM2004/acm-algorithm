描述

You are given an array a consisting of n positive integers. You can perform operations on it.

In one operation you can replace any element of the array a 
i
​
  with ⌊ 
2
a 
i
​
 
​
 ⌋, that is, by an integer part of dividing a 
i
​
  by 2 (rounding down).

See if you can apply the operation some number of times (possible 0) to make the array a become a permutation of numbers from 1 to n —that is, so that it contains all numbers from 1 to n, each exactly once.

For example, if a=[1,8,25,2], n=4, then the answer is yes. You could do the following:

Replace 8 with ⌊ 
2
8
​
 ⌋=4, then a=[1,4,25,2].
Replace 25 with ⌊ 
2
25
​
 ⌋=12, then a=[1,4,12,2].
Replace 12 with ⌊ 
2
12
​
 ⌋=6, then a=[1,4,6,2].
Replace 6 with ⌊ 
2
6
​
 ⌋=3, then a=[1,4,3,2].
输入描述

The first line of input data contains an integer t (1≤t≤10 
4
 ) —the number of test cases.

Each test case contains exactly two lines. The first one contains an integer n (1≤n≤50), the second one contains integers a 
1
​
 ,a 
2
​
 ,…,a 
n
​
  (1≤a 
i
​
 ≤10 
9
 ).

输出描述

For each test case, output on a separate line:

YES if you can make the array a become a permutation of numbers from 1 to n,
NO otherwise.
You can output YES and NO in any case (for example, strings yEs, yes, Yes and YES will be recognized as a positive response).

用例输入 1 

6
4
1 8 25 2
2
1 1
9
9 8 3 4 2 7 1 5 6
3
8 2 1
4
24 7 16 7
5
22 6 22 4 22
用例输出 1 

YES
NO
YES
NO
NO
YES
提示

The first test case is explained in the text of the problem statement.

In the second test case, it is not possible to get a permutation.




#include<bits/stdc++.h>
using namespace std;
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);cin.tie(0);
    int t;cin>>t;
    while(t--)
    {
        
        int n;cin>>n;
        vector<int>a(n);
        for(int i=0;i<n;i++)cin>>a[i];
        unordered_set<int>index;
        sort(a.begin(),a.end());
        for(int i=0;i<n;i++)
        {
            while(a[i]>n)a[i]/=2;
            
        }
        int ok=0;
        sort(a.begin(),a.end());
       	for(int i=0;i<n;i++)
        {
            if(index.count(a[i]))
            {
                while(a[i]>0&&index.count(a[i]))a[i]/=2;
                if(a[i]<=0)
                {
                    ok=1;
                    cout<<"NO"<<endl;
                    break;
                }
                else 
                {
                    index.insert(a[i]);
                }
            }
            else 
            {
                index.insert(a[i]);
            }
        }
        if(ok==0)cout<<"YES"<<endl;
    }
    return 0;
}