//01背包

样例输入
4 5
1 2
2 4
3 4
4 5
样例输出
8

#include<bits/stdc++.h>
using namespace std;
int n,m;
const int N=1009;
int v[N],w[N];//v是重量，w是价值
int dp[N];//状态转移数组
int main()
{
    cin>>n>>m;//n是物品种数，m是背包可以承受的最大重量
    for(int i=1;i<=n;i++)
    {
        cin>>v[i]>>w[i];
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=m;j>=1;j--)
        {
            if(j>=v[i])
           	dp[j]=max(dp[j],dp[j-v[i]]+w[i]);
        }
    }
    cout<<dp[m];
    return 0;
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//完全背包

样例输入
4 5
1 2
2 4
3 4
4 5
样例输出
10

#include<bits/stdc++.h>
using namespace std;
int n,m;
const int N=1009;
int v[N],w[N];
int dp[N];
int main()
{
    cin>>n>>m;
    for(int i=1;i<=n;i++)
    {
        cin>>v[i]>>w[i];
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            if(j>=v[i])
           	dp[j]=max(dp[j],dp[j-v[i]]+w[i]);
        }
    }
    cout<<dp[m]<<endl;
    return 0;
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//多重背包

样例输入
4 5
1 2 3
2 4 1
3 4 3
4 5 2
样例输出
10

#include<bits/stdc++.h>
using namespace std;
//抄板子，模版题
const int N=100005;
int v,w,s;//是一种物品的使用次数
int new_v[N],new_w[N],dp[N];
int n,m;
int main()
{
    cin>>n>>m;
    int cnt=1;
    for(int i=1;i<=n;i++)
    {
        cin>>v>>w>>s;
        int x=1;
        while(s>=x)
        {
            s-=x;
            new_v[cnt]=x*v;
            new_w[cnt]=x*w;
            cnt++;
            x*=2;
        }
        if(s>0)
        {
            new_v[cnt]=s*v;
            new_w[cnt]=s*w;
            cnt++;
        }
    }
    cnt--;
    for(int i=1;i<=cnt;i++)
    {
        for(int j=m;j>=1;j--)
        {
            if(j>=new_v[i])dp[j]=max(dp[j],dp[j-new_v[i]]+new_w[i]);
        }
    }
    cout<<dp[m]<<endl;
    return 0;
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//分组背包

样例输入
3 5
2
1 2
2 4
1
3 4
1
4 5
样例输出
8

#include<bits/stdc++.h>
using namespace std;
//分组背包，抄板子，模版题
const int N=105;
int v[N][N],w[N][N],s[N],dp[N][N];
int n,m;
int main()
{
    cin>>n>>m;
    for(int i=1;i<=n;i++)
    {
        cin>>s[i];
        for(int j=1;j<=s[i];j++)
        {
            cin>>v[i][j]>>w[i][j];
        }
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            dp[i][j]=dp[i-1][j];
            for(int k=1;k<=s[i];k++)
            {
                if(j>=v[i][k])dp[i][j]=max(dp[i][j],dp[i-1][j-v[i][k]]+w[i][k]);
            }
        }
    }
    cout<<dp[n][m]<<endl;
    return 0;
}